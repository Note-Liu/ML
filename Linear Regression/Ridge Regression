from matplotlib.font_manager import FontProperties
import matplotlib.pyplot as plt
import numpy as np
'''
函数说明：加载数据
Parameters：
    fileName----文件名
Returns：
    xArr----x数据集
    yArr-----y数据集
Modify：
    2019-1-24
'''
def loadDataSet(fileName):
    numFeat = len(open(fileName).readline().split('\t')) -1
    xArr = []
    yArr =[]
    fr = open(fileName)
    for line in fr.readlines():
        curLine = []
        lines=line.strip().split('\t')
        for i in range(numFeat):
            curLine.append(float(lines[i]))
        xArr.append(curLine)
        yArr.append(float(lines[-1]))
    return xArr,yArr
'''
函数说明：岭回归
Parameters：
    xMat----x数据集
    yMat----y数据集
    lam-----缩减系数
Returns：
    ws----回归系数
Modify：
    2019-1-24
'''
def ridgeRegres(xMat,yMat,lam = 0.2):
    xTx = xMat.T * xMat
    denom = xTx + np.eye(np.shape(xMat)[1]) * lam
    if np.linalg.det(denom) == 0.0:
        print("矩阵为奇异矩阵，不能求逆")
        return
    ws = denom.I * (xMat.T * yMat)
    return ws
'''
函数说明：岭回归测试
Parameters：
    xMat-----x数据集
    yMat------y数据集
Returns：
    wMat-----回归系数矩阵
Modify:
    2019-1-24
'''
def ridgeTest(xArr,yArr):
    xMat = np.mat(xArr)
    yMat = np.mat(yArr).T
    #数据标准化
    yMean = np.mean(yMat,axis = 0)
    yMat = yMat - yMean
    xMeans = np.mean(xMat,axis = 0)
    xVar = np.var(xMat,axis =0)
    xMat = (xMat - xMeans) / xVar
    numTestPts =30
    wMat = np.zeros((numTestPts,np.shape(xMat)[1]))
    for i in range(numTestPts):
        ws = ridgeRegres(xMat,yMat,np.exp(i -10))
        wMat[i,:] = ws.T
    return wMat
'''
函数说明：绘制岭回归系数矩阵
Parameters：
    无
Returns:
    无
Modify：
    2019-1-24
'''
def plotwMat():
    font = FontProperties(fname = r"c:\windows\fonts\simsun.ttc",size =14)
    abX,abY = loadDataSet('abalone.txt')
    redgeWeights = ridgeTest(abX,abY)
    fig = plt.figure()
    ax = fig.add_subplot(111)
    ax.plot(redgeWeights)
    ax_title_text = ax.set_title(u'log(lambada)与回归系数的关系',FontProperties = font)
    ax_xlabel_text = ax.set_xlabel(u'log(lambda)',FontProperties = font)
    ax_ylabel_text = ax.set_ylabel(u"回归系数",FontProperties = font)
    plt.setp(ax_title_text,size =20,weight ='bold',color="red")
    plt.setp(ax_xlabel_text,size =10,weight = 'bold',color = 'black')
    plt.setp(ax_ylabel_text,size =10 ,weight = 'bold',color='black')
    plt.show()

if __name__ == "__main__":
    plotwMat()
